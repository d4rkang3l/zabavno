#!/usr/bin/env scheme-script
;; -*- mode: scheme; coding: utf-8 -*- !#
;; PC emulator in Scheme
;; Copyright © 2016 Göran Weinholt <goran@weinholt.se>

;; Permission is hereby granted, free of charge, to any person obtaining a
;; copy of this software and associated documentation files (the "Software"),
;; to deal in the Software without restriction, including without limitation
;; the rights to use, copy, modify, merge, publish, distribute, sublicense,
;; and/or sell copies of the Software, and to permit persons to whom the
;; Software is furnished to do so, subject to the following conditions:

;; The above copyright notice and this permission notice shall be included in
;; all copies or substantial portions of the Software.

;; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
;; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
;; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
;; THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
;; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
;; FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
;; DEALINGS IN THE SOFTWARE.
#!r6rs

(import (rnrs (6))
        (zabavno cpu x86)
        (zabavno firmware pcbios)
        (zabavno loader pcboot)
        (zabavno loader doscom))

(define (main filename enable-debug)
  (let ((M (make-machine)))
    (with-machine M
      (lambda ()
        (machine-debug-set! M enable-debug)
        (call-with-port (open-file-input-port filename)
          (lambda (p)
            (if (detect-boot-sector p)
                (load-boot-sector p)
                (load-dos-com-image p))))
        (pcbios-setup)
        (let lp ()
          (machine-run)                 ;run until ICEBP
          (when (eq? (pcbios-post-emulator-exit M) 'continue-emulator)
            (lp)))))))

(define (display-help)
  (display "The zabavno machine emulator test program\n\
Usage: zabavno [--debug] <program-image>\n\
The image may be a DOS .com file or a PC boot sector.\n"
           (current-error-port)))

;; Handle command line arguments.
(let lp ((parameters (cdr (command-line)))
         (filename #f)
         (enable-debug #f))
  (cond ((null? parameters)
         (cond (filename
                (main filename enable-debug))
               (else
                (display-help)
                (exit 1))))
        ((equal? (car parameters) "--debug")
         (lp (cdr parameters) filename #t))
        ((not filename)
         (lp (cdr parameters) (car parameters) enable-debug))
        (else
         (display-help)
         (exit 1))))
